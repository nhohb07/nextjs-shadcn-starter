// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  firstName     String
  lastName      String
  password      String?   // Nullable for social login users
  isActive      Boolean   @default(false)
  lastLogin     DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  emailVerified DateTime?
  socialAccounts SocialAccount[]
  verificationToken VerificationToken?
}

model SocialAccount {
  id        Int      @id @default(autoincrement())
  provider  String   // 'google', 'apple', 'facebook'
  providerId String  // The ID from the social provider
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([provider, providerId])
  @@index([userId])
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  token      String   @unique
  expires    DateTime
  user       User     @relation(fields: [userId], references: [id])
  userId     Int      @unique
  createdAt  DateTime @default(now())

  @@index([userId])
}
